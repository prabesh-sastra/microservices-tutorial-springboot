FROM adoptopenjdk/openjdk11-openj9:alpine-slim as build
WORKDIR /workspace/app

RUN mkdir -p target

COPY target/*.jar target

RUN mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)


FROM adoptopenjdk/openjdk11-openj9:alpine-jre
VOLUME /tmp

ARG DEPENDENCY=/workspace/app/target/dependency
COPY --from=build ${DEPENDENCY}/BOOT-INF/lib /app/lib
COPY --from=build ${DEPENDENCY}/META-INF /app/META-INF
COPY --from=build ${DEPENDENCY}/BOOT-INF/classes /app

RUN apk add --no-cache curl

RUN addgroup bootapp && \
    adduser -D -S -h /var/cache/bootapp -s /sbin/nologin -G bootapp bootapp

ENV JAVA_OPTS="-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms16m -Xmx48m -XX:MaxMetaspaceSize=64m -XX:CompressedClassSpaceSize=8m -Xss256k -Xmn8m -XX:InitialCodeCacheSize=4m -XX:ReservedCodeCacheSize=8m -XX:MaxDirectMemorySize=16m"
ENV PARAMS=""

USER bootapp

ENV AB_OFF=true
ENV JAEGER_SERVICE_NAME=census-zipcode\
  JAEGER_ENDPOINT=http://jaeger-collector.istio-system.svc:14268/api/traces\
  JAEGER_PROPAGATION=b3\
  JAEGER_SAMPLER_TYPE=const\
  JAEGER_SAMPLER_PARAM=1

EXPOSE 8080 8778 9779 5006

ENTRYPOINT java $PARAMS $JAVA_OPTS -Dserver.port=8080 -Xshareclasses -Xquickstart -cp app:app/lib/* br.com.trevezani.tutorial.zipcode.infrastructure.Application